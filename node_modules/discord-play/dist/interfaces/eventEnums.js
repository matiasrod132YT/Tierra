"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DisPlayEvent = void 0;
var DisPlayEvent;
(function (DisPlayEvent) {
    /**
     * The event when voice connection has been created.
     */
    DisPlayEvent["VOICE_JOIN"] = "voiceConnectionCreate";
    /**
     * The event when voice connection has been destroyed (i.e. bot left the voice channel).
     */
    DisPlayEvent["VOICE_LEAVE"] = "voiceConnectionDestroy";
    /**
     * The event when bot is moved from one voice channel to another.
     */
    DisPlayEvent["VOICE_MOVE"] = "voiceConnectionMove";
    /**
     * The event when bot was forcibly kicked from voice channel.
     */
    DisPlayEvent["VOICE_KICK"] = "voiceConnectionKick";
    /**
     * The event when `selfDeafen()` was used.
     */
    DisPlayEvent["SELF_DEAFEN"] = "selfDeafen";
    /**
     * The event when `selfMute()` was used.
     */
    DisPlayEvent["SELF_MUTE"] = "selfMute";
    /**
     * The event when audio resource is buffering before being played.
     */
    DisPlayEvent["BUFFERING"] = "audioPlayerBuffer";
    /**
     * The event after resource has buffered and has started playing.
     */
    DisPlayEvent["PLAYING"] = "audioPlayerStart";
    /**
     * The event when resource stops playing, i.e. player goes to *Idle* state.
     */
    DisPlayEvent["FINISH"] = "audioPlayerFinish";
    /**
     * The event when the player was paused using `toggleMute()` function.
     */
    DisPlayEvent["PAUSE"] = "audioPlayerPause";
    /**
     * The event when the player was goes autopaused due to nosubscriber behavior.
     */
    DisPlayEvent["AUTOPAUSE"] = "audioPlayerAutoPause";
    /**
     * The event when the player was unpaused using `toggleMute()` function.
     */
    DisPlayEvent["RESUME"] = "audioPlayerResume";
})(DisPlayEvent = exports.DisPlayEvent || (exports.DisPlayEvent = {}));
//# sourceMappingURL=eventEnums.js.map